// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	emptypb "google.golang.org/protobuf/types/known/emptypb"

	stk "github.com/gidyon/mpesapayments/pkg/api/stk"
)

// StkPushAPIServer is an autogenerated mock type for the StkPushAPIServer type
type StkPushAPIServer struct {
	mock.Mock
}

// CreateStkPayload provides a mock function with given fields: _a0, _a1
func (_m *StkPushAPIServer) CreateStkPayload(_a0 context.Context, _a1 *stk.CreateStkPayloadRequest) (*stk.StkPayload, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *stk.StkPayload
	if rf, ok := ret.Get(0).(func(context.Context, *stk.CreateStkPayloadRequest) *stk.StkPayload); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*stk.StkPayload)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *stk.CreateStkPayloadRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetStkPayload provides a mock function with given fields: _a0, _a1
func (_m *StkPushAPIServer) GetStkPayload(_a0 context.Context, _a1 *stk.GetStkPayloadRequest) (*stk.StkPayload, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *stk.StkPayload
	if rf, ok := ret.Get(0).(func(context.Context, *stk.GetStkPayloadRequest) *stk.StkPayload); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*stk.StkPayload)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *stk.GetStkPayloadRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InitiateSTKPush provides a mock function with given fields: _a0, _a1
func (_m *StkPushAPIServer) InitiateSTKPush(_a0 context.Context, _a1 *stk.InitiateSTKPushRequest) (*stk.InitiateSTKPushResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *stk.InitiateSTKPushResponse
	if rf, ok := ret.Get(0).(func(context.Context, *stk.InitiateSTKPushRequest) *stk.InitiateSTKPushResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*stk.InitiateSTKPushResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *stk.InitiateSTKPushRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListStkPayloads provides a mock function with given fields: _a0, _a1
func (_m *StkPushAPIServer) ListStkPayloads(_a0 context.Context, _a1 *stk.ListStkPayloadsRequest) (*stk.ListStkPayloadsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *stk.ListStkPayloadsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *stk.ListStkPayloadsRequest) *stk.ListStkPayloadsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*stk.ListStkPayloadsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *stk.ListStkPayloadsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ProcessStkPayload provides a mock function with given fields: _a0, _a1
func (_m *StkPushAPIServer) ProcessStkPayload(_a0 context.Context, _a1 *stk.ProcessStkPayloadRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *emptypb.Empty
	if rf, ok := ret.Get(0).(func(context.Context, *stk.ProcessStkPayloadRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *stk.ProcessStkPayloadRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PublishAllStkPayload provides a mock function with given fields: _a0, _a1
func (_m *StkPushAPIServer) PublishAllStkPayload(_a0 context.Context, _a1 *stk.PublishAllStkPayloadRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *emptypb.Empty
	if rf, ok := ret.Get(0).(func(context.Context, *stk.PublishAllStkPayloadRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *stk.PublishAllStkPayloadRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PublishStkPayload provides a mock function with given fields: _a0, _a1
func (_m *StkPushAPIServer) PublishStkPayload(_a0 context.Context, _a1 *stk.PublishStkPayloadRequest) (*emptypb.Empty, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *emptypb.Empty
	if rf, ok := ret.Get(0).(func(context.Context, *stk.PublishStkPayloadRequest) *emptypb.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*emptypb.Empty)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *stk.PublishStkPayloadRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedStkPushAPIServer provides a mock function with given fields:
func (_m *StkPushAPIServer) mustEmbedUnimplementedStkPushAPIServer() {
	_m.Called()
}
